<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Tue Nov 11 06:02:38 NZDT 2014-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.solarnetwork.central.user.dao.mybatis.UserAlertSituation">

	<insert id="insert-UserAlertSituation" parameterType="UserAlertSituation">
		<selectKey keyProperty="id" resultType="long" order="BEFORE"> 
              SELECT nextval('solaruser.user_alert_seq') AS id 
		</selectKey>
		INSERT INTO solaruser.user_alert_sit 
			(id, alert_id, status
			<if test="created != null">,created</if>
			<if test="notified != null">,notified</if>
			)
		VALUES
			(#{id}, #{alert.id}, CAST(#{status} AS solaruser.user_alert_sit_status)
			<if test="created != null">,#{created}</if>
			<if test="notified != null">,#{notified}</if>
			)
	</insert>

	<update id="update-UserAlertSituation" parameterType="UserAlertSituation">
		UPDATE solaruser.user_alert_sit SET
			notified = #{notified}, 
			status = CAST(#{status} AS solaruser.user_alert_sit_status)
		WHERE
			id = #{id}
	</update>

	<sql id="fragment-UserAlertSituation-full-result">
		uas.id AS user_alert_sit_id, 
		uas.created AS user_alert_sit_created,
		uas.notified AS user_alert_sit_notified,
		uas.status AS user_alert_sit_status
	</sql>

	<resultMap id="UserAlertSituationFullResult" type="UserAlertSituation">
		<id property="id" column="user_alert_sit_id"/>
		<result property="created" column="user_alert_sit_created"/>
		<result property="notified" column="user_alert_sit_notified"/>
		<result property="status" column="user_alert_sit_status"/>
		<association property="alert" resultMap="net.solarnetwork.central.user.dao.mybatis.UserAlert.UserAlertFullResult"/>
	</resultMap>
	
	<select id="get-UserAlertSituation-for-id" parameterType="long" resultMap="UserAlertSituationFullResult">
		SELECT
			<include refid="fragment-UserAlertSituation-full-result"/>,
			<include refid="net.solarnetwork.central.user.dao.mybatis.UserAlert.fragment-UserAlert-full-result"/>
		FROM
			solaruser.user_alert_sit uas
		INNER JOIN
			solaruser.user_alert ual ON ual.id = uas.alert_id
		WHERE
			uas.id = #{id}
	</select>
	
	<select id="get-UserAlertSituation-for-active-alert" parameterType="long" resultMap="UserAlertSituationFullResult">
		SELECT
			<include refid="fragment-UserAlertSituation-full-result"/>,
			<include refid="net.solarnetwork.central.user.dao.mybatis.UserAlert.fragment-UserAlert-full-result"/>
		FROM
			solaruser.user_alert_sit uas
		INNER JOIN
			solaruser.user_alert ual ON ual.id = uas.alert_id
		WHERE
			uas.alert_id = #{id}
			AND uas.status = CAST('Active' AS solaruser.user_alert_sit_status)
	</select>

	<update id="delete-UserAlertSituation-resolved" statementType="CALLABLE" parameterType="map">
		{#{result, mode=OUT, jdbcType=BIGINT} = call solaruser.purge_resolved_situations(
			#{date, mode=IN, jdbcType=TIMESTAMP}
		)}
	</update>
	
</mapper>
