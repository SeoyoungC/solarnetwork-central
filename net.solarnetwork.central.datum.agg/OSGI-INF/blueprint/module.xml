<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:osgi="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint
		http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Configuration -->
	
	<osgix:cm-properties id="cfg" persistent-id="net.solarnetwork.central.datum.agg">
		<beans:prop key="staleNodeDatumProcessor.maximumRowCount">50</beans:prop>
		<beans:prop key="staleNodeDatumProcessor.jobCron">0 0/1 * * * ?</beans:prop>
		<beans:prop key="staleGeneralNodeDatumProcessor.hourly.jobCron">15 0/1 * * * ?</beans:prop>
		<beans:prop key="staleGeneralNodeDatumProcessor.daily.jobCron">30 0/5 * * * ?</beans:prop>
	</osgix:cm-properties>

	<ctx:property-placeholder properties-ref="cfg"/>

	<!-- Service references -->

	<reference id="eventAdmin" interface="org.osgi.service.event.EventAdmin"/>

	<reference id="jdbcOps" interface="org.springframework.jdbc.core.JdbcOperations"
			filter="(db=central)"/>
	
	<!-- Supporting Services -->
	
	<bean id="staleNodeDatumProcessor" class="net.solarnetwork.central.datum.agg.StaleDatumProcessor">
		<argument ref="eventAdmin"/>
		<argument ref="jdbcOps"/>
		<property name="maximumRowCount" value="${staleNodeDatumProcessor.maximumRowCount}"/>
		<property name="jobCron" value="${staleNodeDatumProcessor.jobCron}"/>
		<property name="jdbcCall" value="{? = call solarrep.process_one_rep_stale_node_datum()}"/>
		<property name="jobId" value="StaleNodeDatumProcessor"/>
		<property name="jobTopic" value="net/solarnetwork/central/datum/agg/StaleNodeDatumProcessor"/>
	</bean>
	
	<bean id="staleGeneralNodeDatumProcessorHourly" class="net.solarnetwork.central.datum.agg.StaleGeneralNodeDatumProcessor">
		<argument ref="eventAdmin"/>
		<argument ref="jdbcOps"/>
		<property name="maximumRowCount" value="${staleNodeDatumProcessor.maximumRowCount}"/>
		<property name="jobCron" value="${staleGeneralNodeDatumProcessor.hourly.jobCron}"/>
		<property name="jobId" value="StaleGeneralNodeDatumProcessorHourly"/>
		<property name="jobTopic" value="net/solarnetwork/central/datum/agg/StaleGeneralNodeDatumProcessor"/>
		<property name="aggregateProcessType" value="h"/>
	</bean>
	
	<bean id="staleGeneralNodeDatumProcessorDaily" class="net.solarnetwork.central.datum.agg.StaleGeneralNodeDatumProcessor">
		<argument ref="eventAdmin"/>
		<argument ref="jdbcOps"/>
		<property name="maximumRowCount" value="${staleNodeDatumProcessor.maximumRowCount}"/>
		<property name="jobCron" value="${staleGeneralNodeDatumProcessor.daily.jobCron}"/>
		<property name="jobId" value="StaleGeneralNodeDatumProcessorDaily"/>
		<property name="jobTopic" value="net/solarnetwork/central/datum/agg/StaleGeneralNodeDatumProcessor"/>
		<property name="aggregateProcessType" value="d"/>
	</bean>
	
	<!-- Published Services -->

	<service ref="staleNodeDatumProcessor" interface="org.osgi.service.event.EventHandler">
		<service-properties>
			<entry key="#{T(org.osgi.service.event.EventConstants).EVENT_TOPIC}">
				<array value-type="java.lang.String">
					<value>#{T(net.solarnetwork.central.scheduler.SchedulerConstants).TOPIC_SCHEDULER_READY}</value>
					<value>#{staleNodeDatumProcessor.jobTopic}</value>
				</array>
			</entry>
		</service-properties>
	</service>

	<service ref="staleGeneralNodeDatumProcessorHourly" interface="org.osgi.service.event.EventHandler">
		<service-properties>
			<entry key="#{T(org.osgi.service.event.EventConstants).EVENT_TOPIC}">
				<array value-type="java.lang.String">
					<value>#{T(net.solarnetwork.central.scheduler.SchedulerConstants).TOPIC_SCHEDULER_READY}</value>
					<value>#{staleGeneralNodeDatumProcessorHourly.jobTopic}</value>
				</array>
			</entry>
		</service-properties>
	</service>

	<service ref="staleGeneralNodeDatumProcessorDaily" interface="org.osgi.service.event.EventHandler">
		<service-properties>
			<entry key="#{T(org.osgi.service.event.EventConstants).EVENT_TOPIC}">
				<array value-type="java.lang.String">
					<value>#{T(net.solarnetwork.central.scheduler.SchedulerConstants).TOPIC_SCHEDULER_READY}</value>
					<value>#{staleGeneralNodeDatumProcessorDaily.jobTopic}</value>
				</array>
			</entry>
		</service-properties>
	</service>

</blueprint>
