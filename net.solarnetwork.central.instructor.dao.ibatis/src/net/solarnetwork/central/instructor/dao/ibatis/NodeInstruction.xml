<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE sqlMap 
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd"> 
<sqlMap namespace="NodeInstruction">

	<typeAlias alias="InstructionParameter" type="net.solarnetwork.central.instructor.domain.InstructionParameter"/>

	<insert id="insert-NodeInstruction" parameterClass="NodeInstruction">
		<selectKey resultClass="long" keyProperty="id"> 
              SELECT nextval('solarnet.solarnet_seq') AS id 
		</selectKey>
		INSERT INTO solarnet.sn_node_instruction 
			(id
			<isNotNull prepend="," property="created">created</isNotNull>
			, node_id, topic, instr_date, deliver_state)
		VALUES
			(#id#
			<isNotNull prepend="," property="created">#created#</isNotNull>
			, #nodeId#, #topic#, #instructionDate#, 
			CAST(#state# AS solarnet.instruction_delivery_state))
	</insert>

	<update id="update-NodeInstruction" parameterClass="NodeInstruction">
		UPDATE 
			solarnet.sn_node_instruction
		SET
			deliver_state = CAST(#state# AS solarnet.instruction_delivery_state)
		WHERE
			id = #id#
	</update>

	<sql id="fragment-NodeInstruction-full-result">
		ni.id AS sn_node_instruction_id,
		ni.created AS sn_node_instruction_created,
		ni.node_id AS sn_node_instruction_node_id,
		ni.topic AS sn_node_instruction_topic,
		ni.instr_date AS sn_node_instruction_instr_date,
		ni.deliver_state AS sn_node_instruction_deliver_state
	</sql>
	
	<resultMap id="NodeInstructionFullResult" class="NodeInstruction" groupBy="id">
		<result column="sn_node_instruction_id" property="id"/>
		<result column="sn_node_instruction_created" property="created"/>
		<result column="sn_node_instruction_node_id" property="nodeId"/>
		<result column="sn_node_instruction_topic" property="topic"/>
		<result column="sn_node_instruction_instr_date" property="instructionDate"/>
		<result column="sn_node_instruction_deliver_state" property="state"/>
		<result property="parameters" resultMap="NodeInstruction.InstructionParameterFullResult"/>
	</resultMap>
	
	<sql id="fragment-InstructionParameter-full-result">
		nip.pname AS sn_node_instruction_param_pname,
		nip.pvalue AS sn_node_instruction_param_pvalue
	</sql>
	
	<resultMap id="InstructionParameterFullResult" class="InstructionParameter">
		<result column="sn_node_instruction_param_pname" property="name"/>
		<result column="sn_node_instruction_param_pvalue" property="value"/>
	</resultMap>

	<select id="get-NodeInstruction-for-id" resultMap="NodeInstructionFullResult">
		SELECT
			<include refid="fragment-NodeInstruction-full-result"/>,
			<include refid="fragment-InstructionParameter-full-result"/>
		FROM
			solarnet.sn_node_instruction ni
		LEFT OUTER JOIN 
			solarnet.sn_node_instruction_param nip ON nip.instr_id = ni.id
		WHERE
			ni.id = #id#
	</select>
	
	<!--  Filter search -->
	
	<select id="findall-NodeInstruction-EntityMatch" resultMap="NodeInstructionFullResult" parameterClass="map">
		SELECT 
			<include refid="fragment-NodeInstruction-full-result"/>,
			<include refid="fragment-InstructionParameter-full-result"/>
		FROM
			solarnet.sn_node_instruction ni
		LEFT OUTER JOIN 
			solarnet.sn_node_instruction_param nip ON nip.instr_id = ni.id
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property="filter.nodeId">
				ni.node_id = #filter.nodeId#
			</isNotNull>
			<isNotNull prepend="AND" property="filter.state">
				ni.deliver_state = CAST(#filter.state# AS solarnet.instruction_delivery_state)
			</isNotNull>
		</dynamic>
		ORDER BY ni.id
	</select>
	
	<!-- InstructionParameter support -->
	
	<select id="findall-NodeInstruction-InstructionParameter" resultMap="InstructionParameterFullResult" parameterClass="long">
		SELECT 
			<include refid="fragment-InstructionParameter-full-result"/>
		FROM 
			solarnet.sn_node_instruction_param nip
		WHERE nip.instr_id = #id#
		ORDER BY idx
	</select>
	
	<delete id="delete-NodeInstruction-InstructionParameter" parameterClass="map">
		DELETE FROM solarnet.sn_node_instruction_param
		WHERE instr_id = #id#
		<isPropertyAvailable property="index">
			AND idx = #index#
		</isPropertyAvailable>
	</delete>

	<insert id="insert-NodeInstruction-InstructionParameter" parameterClass="map">
		INSERT INTO solarnet.sn_node_instruction_param
			(instr_id, idx, pname, pvalue)
		VALUES
			(#id#, #index#, #obj.name#, #obj.value#)
	</insert>

</sqlMap>
