<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE sqlMap 
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd"> 
<sqlMap namespace="UserNodeAuthToken">

	<insert id="insert-UserNodeAuthToken" parameterClass="UserNodeAuthToken">
		INSERT INTO solaruser.user_node_auth_token 
			(auth_token
			<isNotNull prepend="," property="created">created</isNotNull>
			, node_id, auth_secret, status
			)
		VALUES
			(#id#
			<isNotNull prepend="," property="created">#created#</isNotNull>
			, #nodeId#, #authSecret#, #status#
			)
	</insert>

	<!-- Notice we include the node_id in the update clause, because application
	     logic attempts to update first, then insert, and we don't want two 
	     random auth_token values that collide from two different users to 
	     write over each other! -->
	<update id="update-UserNodeAuthToken" parameterClass="UserNodeAuthToken">
		UPDATE solaruser.user_node_auth_token SET
			status = #status#
		WHERE
			auth_token = #id#
			AND node_id = #nodeId#
	</update>

	<update id="delete-UserNodeAuthToken" parameterClass="string">
		DELETE FROM solaruser.user_node_auth_token
		WHERE
			auth_token = #id#
	</update>

	<sql id="fragment-UserNodeAuthToken-full-result">
		unat.auth_token AS unat_auth_token,
		unat.created AS unat_created,
		unat.node_id AS unat_node_id,
		unat.auth_secret AS unat_auth_secret,
		unat.status AS unat_status
	</sql>

	<resultMap id="UserNodeAuthTokenFullResult" class="UserNodeAuthToken">
		<result column="unat_auth_token" property="id"/>
		<result column="unat_created" property="created"/>
		<result column="unat_node_id" property="nodeId"/>
		<result column="unat_auth_secret" property="authSecret"/>
		<result column="unat_status" property="status"/>
	</resultMap>
	
	<select id="get-UserNodeAuthToken-for-id" resultMap="UserNodeAuthTokenFullResult">
		SELECT
			<include refid="fragment-UserNodeAuthToken-full-result"/>
		FROM
			solaruser.user_node_auth_token unat
		WHERE
			unat.auth_token = #id#
	</select>
	
	<select id="find-UserNodeAuthToken-for-NodeID" resultMap="UserNodeAuthTokenFullResult" parameterClass="long">
		SELECT 
			<include refid="fragment-UserNodeAuthToken-full-result"/>
		FROM
			solaruser.user_node_auth_token unat
		WHERE
			unat.node_id = #id#
		ORDER BY
			unat.created, unat.auth_token
	</select>

</sqlMap>
