<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<context:component-scan base-package="net.solarnetwork.central.query.web"/>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prefixJson" value="false" />
				<property name="supportedMediaTypes" value="application/json" />
				<property name="objectMapper" ref="objectMapper"/>
		    </bean>
		    <bean class="net.solarnetwork.web.support.SimpleXmlHttpMessageConverter">
		    	<property name="propertySerializerRegistrar" ref="xmlPropertySerializerRegistrar"/>
			    <property name="classNamesAllowedForNesting">
					<set>
						<value>net.solarnetwork</value>
					</set>
				</property>
			</bean>
			<bean class="net.solarnetwork.web.support.SimpleCsvHttpMessageConverter">
		    	<property name="propertySerializerRegistrar" ref="propertySerializerRegistrar"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<util:map id="datumControllerTypeMap" value-type="java.lang.Class">
		<entry key="consumption" value="#{T(net.solarnetwork.central.datum.domain.ConsumptionDatum)}"/>
		<entry key="hardwarecontrol" value="#{T(net.solarnetwork.central.datum.domain.HardwareControlDatum)}"/>
		<entry key="power" value="#{T(net.solarnetwork.central.datum.domain.PowerDatum)}"/>
		<entry key="day" value="#{T(net.solarnetwork.central.datum.domain.DayDatum)}"/>
		<entry key="weather" value="#{T(net.solarnetwork.central.datum.domain.WeatherDatum)}"/>
	</util:map>
	
	<util:map id="datumControllerFilterTypeMap" value-type="java.lang.Class">
		<entry key="consumption" value="#{T(net.solarnetwork.central.datum.domain.ConsumptionDatum)}"/>
		<entry key="day" value="#{T(net.solarnetwork.central.datum.domain.DayDatum)}"/>
		<entry key="hardwarecontrol" value="#{T(net.solarnetwork.central.datum.domain.HardwareControlDatum)}"/>
		<entry key="power" value="#{T(net.solarnetwork.central.datum.domain.PowerDatum)}"/>
		<entry key="weather" value="#{T(net.solarnetwork.central.datum.domain.WeatherDatum)}"/>
	</util:map>
	
	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1"/>
	</bean>
	
	<!-- Views -->
	
	<bean id="xml" class="net.solarnetwork.web.support.SimpleXmlView">
		<property name="contentType" value="text/xml;charset=UTF-8"/>
		<property name="propertySerializerRegistrar" ref="propertySerializerRegistrar"/>
		<property name="classNamesAllowedForNesting">
			<set>
				<value>net.solarnetwork</value>
			</set>
		</property>
	</bean>
	
	<bean id="json" class="net.solarnetwork.web.support.JSONView">
		<property name="contentType" value="application/json;charset=UTF-8"/>
		<property name="indentAmount" value="${JSONView.indentAmount}"/>
		<property name="propertySerializerRegistrar" ref="propertySerializerRegistrar"/>
		<property name="includeParentheses" value="false"/>
	</bean>
	
</beans>
