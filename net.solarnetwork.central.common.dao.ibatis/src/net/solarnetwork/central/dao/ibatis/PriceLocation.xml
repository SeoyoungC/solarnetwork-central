<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE sqlMap 
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd"> 
<sqlMap namespace="PriceLocation">

	<insert id="insert-PriceLocation" parameterClass="PriceLocation">
		<selectKey resultClass="long" keyProperty="id"> 
              SELECT nextval('solarnet.solarnet_seq') AS id 
		</selectKey>
		INSERT INTO solarnet.sn_price_loc 
			(id
			<isNotNull property="created">, created</isNotNull>
			, loc_name, currency, unit, source_id, source_data, time_zone)
		VALUES
			(#id#
			<isNotNull property="created">, #created#</isNotNull>
			, #name#, #currency#, #unit#, #source.id#, #sourceData#, #timeZoneId#)
	</insert>

	<update id="update-PriceLocation" parameterClass="PriceLocation">
		UPDATE solarnet.sn_price_loc SET
			loc_name = #name#,
			currency = #currency#,
			unit = #unit#,
			source_id = #source.id#,
			source_data = #sourceData#,
			time_zone = #timeZoneId#
		WHERE
			id = #id#
	</update>

	<sql id="fragment-PriceLocation-full-result">
		ploc.id AS sn_price_loc_id,
		ploc.created AS sn_price_loc_created,
		ploc.loc_name AS sn_price_loc_name,
		ploc.currency AS sn_price_loc_currency,
		ploc.unit AS sn_price_loc_unit,
		ploc.source_data AS sn_price_loc_source_data,
		ploc.time_zone AS sn_price_loc_time_zone
	</sql>

	<resultMap id="PriceLocationFullResult" class="PriceLocation">
		<result column="sn_price_loc_id" property="id"/>
		<result column="sn_price_loc_created" property="created"/>
		<result column="sn_price_loc_name" property="name"/>
		<result column="sn_price_loc_currency" property="currency"/>
		<result column="sn_price_loc_unit" property="unit"/>
		<result column="sn_price_loc_source_data" property="sourceData"/>
		<result column="sn_price_loc_time_zone" property="timeZoneId"/>
		<result property="source" resultMap="PriceSource.PriceSourceFullResult"/>
	</resultMap>
	
	<select id="get-PriceLocation-for-id" resultMap="PriceLocationFullResult">
		SELECT
			<include refid="fragment-PriceLocation-full-result"/>,
			<include refid="fragment-PriceSource-full-result"/>
		FROM
			solarnet.sn_price_loc ploc
		INNER JOIN solarnet.sn_price_source psource ON psource.id = ploc.source_id
		WHERE
			ploc.id = #id#
	</select>
	
	<select id="get-PriceLocation-for-name" resultMap="PriceLocationFullResult">
		SELECT
			<include refid="fragment-PriceLocation-full-result"/>,
			<include refid="fragment-PriceSource-full-result"/>
		FROM
			solarnet.sn_price_loc ploc
		INNER JOIN solarnet.sn_price_source psource ON psource.id = ploc.source_id
		WHERE
			ploc.loc_name = #locationName#
			AND psource.sname = #sourceName#
	</select>

	<sql id="fragment-findall-PriceLocation-SourceLocationMatch">
		FROM
			solarnet.sn_price_loc ploc
		INNER JOIN 
			solarnet.sn_price_source psource ON psource.id = ploc.source_id
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property="filter.source">
				psource.fts_default @@ solarcommon.plainto_prefix_tsquery(#filter.source#)
			</isNotNull>
			<isNotNull prepend="AND" property="filter.id">
				ploc.id = #filter.id#
			</isNotNull>
			<isNotNull prepend="AND" property="filter.location.timeZoneId">
				ploc.time_zone = #filter.timeZoneId#
			</isNotNull>
			<isNotNull prepend="AND" property="fts">
				ploc.fts_default @@ solarcommon.plainto_prefix_tsquery(#fts#)
			</isNotNull>
		</dynamic>
	</sql>
	
	<select id="findall-PriceLocation-SourceLocationMatch" resultMap="PriceLocationFullResult">
		SELECT
			<include refid="fragment-PriceLocation-full-result"/>,
			<include refid="fragment-PriceSource-full-result"/>
		<include refid="fragment-findall-PriceLocation-SourceLocationMatch"/>
		ORDER BY
		<isEmpty property="SortDescriptors">
			lower(psource.sname), lower(ploc.loc_name),
		</isEmpty>
		<isNotEmpty property="SortDescriptors">
			<iterate property="SortDescriptors" conjunction="," close=",">
				<isEqual property="SortDescriptors[].sortKey" compareValue="created">ploc.created</isEqual>
				<isEqual property="SortDescriptors[].sortKey" compareValue="source">lower(psource.sname)</isEqual>
				<isEqual property="SortDescriptors[].sortKey" compareValue="sourceName">lower(psource.sname)</isEqual>
				<isEqual property="SortDescriptors[].sortKey" compareValue="location.name">lower(ploc.loc_name)</isEqual>
				<isEqual property="SortDescriptors[].sortKey" compareValue="locationName">lower(ploc.loc_name)</isEqual>
				<isEqual property="SortDescriptors[].sortKey" compareValue="currency">ploc.currency</isEqual>
				<isEqual property="SortDescriptors[].sortKey" compareValue="timeZoneId">ploc.time_zone</isEqual>
				<isEqual property="SortDescriptors[].sortKey" compareValue="location.timeZoneId">ploc.time_zone</isEqual>
				<isEqual property="SortDescriptors[].descending" compareValue="true">DESC</isEqual>
			</iterate>
		</isNotEmpty>
		ploc.id
	</select>

	<select id="findall-PriceLocation-SourceLocationMatch-count" resultClass="long">
		SELECT count(ploc.id) as total
		<include refid="fragment-findall-PriceLocation-SourceLocationMatch"/>
	</select>
	
</sqlMap>
